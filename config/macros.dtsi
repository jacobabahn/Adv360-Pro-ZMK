macro_alt+o: macro_alt+o{
compatible = "zmk,behavior-macro";
label = "macro_alt+o";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp O>;
};
macro_alt+i: macro_alt+i{
compatible = "zmk,behavior-macro";
label = "macro_alt+i";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp I>;
};
macro_alt+e: macro_alt+e{
compatible = "zmk,behavior-macro";
label = "macro_alt+e";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp E>;
};
macro_alt+n: macro_alt+n{
compatible = "zmk,behavior-macro";
label = "macro_alt+n";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp N>;
};
macro_alt+m: macro_alt+m{
compatible = "zmk,behavior-macro";
label = "macro_alt+m";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp M>;
};
macro_alt+g: macro_alt+g{
compatible = "zmk,behavior-macro";
label = "macro_alt+g";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp G>;
};
macro_alt+t: macro_alt+t{
compatible = "zmk,behavior-macro";
label = "macro_alt+t";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp T>;
};
macro_alt+s: macro_alt+s{
compatible = "zmk,behavior-macro";
label = "macro_alt+s";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp S>;
};
macro_alt+r: macro_alt+r{
compatible = "zmk,behavior-macro";
label = "macro_alt+r";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp R>;
};
macro_alt+a: macro_alt+a{
compatible = "zmk,behavior-macro";
label = "macro_alt+a";
#binding-cells = <0>;
bindings = <&kp LEFT_ALT>, <&kp A>;
};
macro_quotes: macro_quotes{
compatible = "zmk,behavior-macro";
label = "macro_quotes";
#binding-cells = <0>;
bindings = <&kp SQT>, <&kp SQT>, <&kp LEFT>;
};
macro_dquotes: macro_dquotes{
compatible = "zmk,behavior-macro";
label = "macro_dquotes";
#binding-cells = <0>;
bindings = <&kp DQT>, <&kp DQT>, <&kp LEFT>;
};
macro_braces: macro_braces{
compatible = "zmk,behavior-macro";
label = "macro_braces";
#binding-cells = <0>;
bindings = <&kp LBRC>, <&kp RBRC>, <&kp LEFT>;
};
macro_parens: macro_parens{
compatible = "zmk,behavior-macro";
label = "macro_parens";
#binding-cells = <0>;
bindings = <&kp LPAR>, <&kp RPAR>, <&kp LEFT>;
};
macro_brackets: macro_brackets{
compatible = "zmk,behavior-macro";
label = "macro_brackets";
#binding-cells = <0>;
bindings = <&kp LBKT>, <&kp RBKT>, <&kp LEFT>;
};
macro_kinesis: macro_kinesis{
compatible = "zmk,behavior-macro";
label = "macro_kinesis";
#binding-cells = <0>;
bindings = <&kp LS(K)>, <&kp I>, <&kp N>, <&kp E>, <&kp S>, <&kp I>, <&kp S>;
};